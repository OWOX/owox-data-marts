"""Initial migration with consistent UUID keys

Revision ID: 7bdefed9d1c9
Revises: 
Create Date: 2025-09-26 11:44:45.933762

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7bdefed9d1c9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('data_destinations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('destination_type', sa.Enum('BIGQUERY', 'GOOGLE_SHEETS', 'LOOKER_STUDIO', 'WEBHOOK', 'EMAIL', name='datadestinationtype'), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_destinations_id'), 'data_destinations', ['id'], unique=False)
    op.create_table('data_storages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('storage_type', sa.Enum('BIGQUERY', 'ATHENA', name='datastoragetype'), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('connection_timeout', sa.String(length=50), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_storages_id'), 'data_storages', ['id'], unique=False)
    op.create_table('platform_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('platform_name', sa.String(length=100), nullable=False),
    sa.Column('platform_display_name', sa.String(length=200), nullable=False),
    sa.Column('encrypted_credentials', sa.Text(), nullable=False),
    sa.Column('account_name', sa.String(length=255), nullable=True),
    sa.Column('account_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('last_validated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('validation_error', sa.Text(), nullable=True),
    sa.Column('granted_permissions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_platform_credentials_id'), 'platform_credentials', ['id'], unique=False)
    op.create_table('data_marts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('storage_id', sa.UUID(), nullable=False),
    sa.Column('schema', sa.JSON(), nullable=True),
    sa.Column('definition_type', sa.Enum('CONNECTOR', 'SQL', 'TABLE', name='datamartdefinitiontype'), nullable=True),
    sa.Column('definition', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='datamartstatus'), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['storage_id'], ['data_storages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_marts_id'), 'data_marts', ['id'], unique=False)
    op.create_table('data_collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('data_mart_id', sa.UUID(), nullable=False),
    sa.Column('platform_credential_id', sa.Integer(), nullable=True),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', name='collectionstatus'), nullable=True),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.Column('processed_records', sa.Integer(), nullable=True),
    sa.Column('failed_records', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('collection_params', sa.JSON(), nullable=True),
    sa.Column('result_summary', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_mart_id'], ['data_marts.id'], ),
    sa.ForeignKeyConstraint(['platform_credential_id'], ['platform_credentials.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_collections_id'), 'data_collections', ['id'], unique=False)
    op.create_table('data_mart_runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_mart_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', name='datamartrunstatus'), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rows_processed', sa.Integer(), nullable=True),
    sa.Column('rows_inserted', sa.Integer(), nullable=True),
    sa.Column('rows_updated', sa.Integer(), nullable=True),
    sa.Column('rows_deleted', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('logs', sa.JSON(), nullable=True),
    sa.Column('run_metadata', sa.JSON(), nullable=True),
    sa.Column('triggered_by', sa.String(length=100), nullable=True),
    sa.Column('trigger_payload', sa.JSON(), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['data_mart_id'], ['data_marts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_mart_runs_id'), 'data_mart_runs', ['id'], unique=False)
    op.create_table('data_mart_scheduled_triggers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_mart_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('trigger_type', sa.Enum('CRON', 'INTERVAL', 'DAILY', 'WEEKLY', 'MONTHLY', 'HOURLY', 'CUSTOM', name='scheduledtriggertype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PAUSED', name='scheduledtriggerstatus'), nullable=True),
    sa.Column('cron_expression', sa.String(length=100), nullable=True),
    sa.Column('interval_seconds', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('run_count', sa.String(length=50), nullable=True),
    sa.Column('max_retries', sa.String(length=10), nullable=True),
    sa.Column('retry_delay_seconds', sa.String(length=50), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['data_mart_id'], ['data_marts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_mart_scheduled_triggers_id'), 'data_mart_scheduled_triggers', ['id'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_mart_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('report_type', sa.Enum('DASHBOARD', 'TABLE', 'CHART', 'EXPORT', name='reporttype'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='reportstatus'), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('query', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('share_token', sa.String(length=255), nullable=True),
    sa.Column('view_count', sa.String(length=50), nullable=True),
    sa.Column('last_viewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['data_mart_id'], ['data_marts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_table('connector_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_mart_run_id', sa.UUID(), nullable=False),
    sa.Column('connector_type', sa.String(length=100), nullable=False),
    sa.Column('stream_name', sa.String(length=255), nullable=False),
    sa.Column('state_type', sa.Enum('INCREMENTAL', 'FULL_REFRESH', 'CHECKPOINT', name='connectorstatetype'), nullable=True),
    sa.Column('state_data', sa.JSON(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('records_synced', sa.String(length=50), nullable=True),
    sa.Column('state_version', sa.String(length=20), nullable=True),
    sa.Column('is_valid', sa.String(length=10), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_mart_run_id'], ['data_mart_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_connector_states_id'), 'connector_states', ['id'], unique=False)
    op.create_table('report_data_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('cache_version', sa.String(length=50), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('cache_metadata', sa.JSON(), nullable=True),
    sa.Column('data_size_bytes', sa.Integer(), nullable=True),
    sa.Column('row_count', sa.Integer(), nullable=True),
    sa.Column('column_count', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('is_compressed', sa.Boolean(), nullable=True),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('generation_duration_ms', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_data_cache_cache_key'), 'report_data_cache', ['cache_key'], unique=True)
    op.create_index(op.f('ix_report_data_cache_id'), 'report_data_cache', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_report_data_cache_id'), table_name='report_data_cache')
    op.drop_index(op.f('ix_report_data_cache_cache_key'), table_name='report_data_cache')
    op.drop_table('report_data_cache')
    op.drop_index(op.f('ix_connector_states_id'), table_name='connector_states')
    op.drop_table('connector_states')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_data_mart_scheduled_triggers_id'), table_name='data_mart_scheduled_triggers')
    op.drop_table('data_mart_scheduled_triggers')
    op.drop_index(op.f('ix_data_mart_runs_id'), table_name='data_mart_runs')
    op.drop_table('data_mart_runs')
    op.drop_index(op.f('ix_data_collections_id'), table_name='data_collections')
    op.drop_table('data_collections')
    op.drop_index(op.f('ix_data_marts_id'), table_name='data_marts')
    op.drop_table('data_marts')
    op.drop_index(op.f('ix_platform_credentials_id'), table_name='platform_credentials')
    op.drop_table('platform_credentials')
    op.drop_index(op.f('ix_data_storages_id'), table_name='data_storages')
    op.drop_table('data_storages')
    op.drop_index(op.f('ix_data_destinations_id'), table_name='data_destinations')
    op.drop_table('data_destinations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
