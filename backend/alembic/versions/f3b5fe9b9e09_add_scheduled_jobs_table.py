"""Add scheduled jobs table

Revision ID: f3b5fe9b9e09
Revises: 32a270cf1fa1
Create Date: 2025-09-29 15:36:42.294046

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f3b5fe9b9e09'
down_revision = '32a270cf1fa1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('data_mart_id', sa.UUID(), nullable=False),
    sa.Column('platform_credential_id', sa.Integer(), nullable=True),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', name='collectionstatus'), nullable=True),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.Column('processed_records', sa.Integer(), nullable=True),
    sa.Column('failed_records', sa.Integer(), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('collection_params', sa.JSON(), nullable=True),
    sa.Column('result_summary', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_mart_id'], ['data_marts.id'], ),
    sa.ForeignKeyConstraint(['platform_credential_id'], ['platform_credentials.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_collections_id'), 'data_collections', ['id'], unique=False)
    op.drop_index('ix_connector_runs_connector_id', table_name='connector_runs')
    op.drop_index('ix_connector_runs_execution_id', table_name='connector_runs')
    op.drop_index('ix_connector_runs_id', table_name='connector_runs')
    op.drop_index('ix_connector_runs_scheduled_job_id', table_name='connector_runs')
    op.drop_table('connector_runs')
    op.drop_table('analytics_data')
    op.add_column('scheduled_jobs', sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('scheduled_jobs', sa.Column('repeat_type', sa.String(length=50), nullable=False))
    op.add_column('scheduled_jobs', sa.Column('status', sa.String(length=50), nullable=False))
    op.add_column('scheduled_jobs', sa.Column('started_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('scheduled_jobs', sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('scheduled_jobs', sa.Column('error_message', sa.Text(), nullable=True))
    op.alter_column('scheduled_jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_scheduled_jobs_connector_id', table_name='scheduled_jobs')
    op.drop_index('ix_scheduled_jobs_id', table_name='scheduled_jobs')
    op.drop_index('ix_scheduled_jobs_name', table_name='scheduled_jobs')
    op.drop_column('scheduled_jobs', 'cron_expression')
    op.drop_column('scheduled_jobs', 'interval_minutes')
    op.drop_column('scheduled_jobs', 'next_run_at')
    op.drop_column('scheduled_jobs', 'last_run_at')
    op.drop_column('scheduled_jobs', 'run_count')
    op.drop_column('scheduled_jobs', 'schedule_config')
    op.drop_column('scheduled_jobs', 'last_run_status')
    op.drop_column('scheduled_jobs', 'timezone')
    op.drop_column('scheduled_jobs', 'schedule_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('scheduled_jobs', sa.Column('schedule_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('timezone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('last_run_status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('schedule_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('scheduled_jobs', sa.Column('run_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('last_run_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('next_run_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('interval_minutes', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('scheduled_jobs', sa.Column('cron_expression', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('ix_scheduled_jobs_name', 'scheduled_jobs', ['name'], unique=False)
    op.create_index('ix_scheduled_jobs_id', 'scheduled_jobs', ['id'], unique=False)
    op.create_index('ix_scheduled_jobs_connector_id', 'scheduled_jobs', ['connector_id'], unique=False)
    op.alter_column('scheduled_jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('scheduled_jobs', 'error_message')
    op.drop_column('scheduled_jobs', 'completed_at')
    op.drop_column('scheduled_jobs', 'started_at')
    op.drop_column('scheduled_jobs', 'status')
    op.drop_column('scheduled_jobs', 'repeat_type')
    op.drop_column('scheduled_jobs', 'scheduled_at')
    op.create_table('analytics_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('campaign_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('impressions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clicks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cost', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('conversions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ctr', sa.NUMERIC(precision=5, scale=3), autoincrement=False, nullable=True),
    sa.Column('collection_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('transferred_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='analytics_data_pkey')
    )
    op.create_table('connector_runs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('connector_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('scheduled_job_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('execution_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('trigger_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('duration_seconds', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('records_transferred', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('success_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_collection_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('destination_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('destination_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('triggered_by_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['connector_id'], ['data_connectors.id'], name='connector_runs_connector_id_fkey'),
    sa.ForeignKeyConstraint(['scheduled_job_id'], ['scheduled_jobs.id'], name='connector_runs_scheduled_job_id_fkey'),
    sa.ForeignKeyConstraint(['triggered_by_id'], ['users.id'], name='connector_runs_triggered_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='connector_runs_pkey')
    )
    op.create_index('ix_connector_runs_scheduled_job_id', 'connector_runs', ['scheduled_job_id'], unique=False)
    op.create_index('ix_connector_runs_id', 'connector_runs', ['id'], unique=False)
    op.create_index('ix_connector_runs_execution_id', 'connector_runs', ['execution_id'], unique=False)
    op.create_index('ix_connector_runs_connector_id', 'connector_runs', ['connector_id'], unique=False)
    op.drop_index(op.f('ix_data_collections_id'), table_name='data_collections')
    op.drop_table('data_collections')
    # ### end Alembic commands ###
